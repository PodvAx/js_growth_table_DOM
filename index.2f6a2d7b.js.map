{"mappings":"ACSA,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAY,EAAU,aAAa,CAAC,UAAU,QAAQ,CAAC,EAAE,CACzD,EAAe,EAAU,aAAa,CAAC,eACvC,EAAkB,EAAU,aAAa,CAAC,kBAC1C,EAAe,EAAU,aAAa,CAAC,eACvC,EAAkB,EAAU,aAAa,CAAC,kBAEhD,SAAS,IACP,OAAO,SAAS,aAAa,CAAC,KAChC,CA0CA,SAAS,EAAkB,CAAM,CAAE,CAAS,EAC1C,EAAO,QAAQ,CAAG,CACpB,CAEA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,WAEhC,GAAK,GAIL,IAxCM,EAeiB,EAyBjB,EAAuB,EAAO,SAAS,CAC1C,KAAK,CAAC,KACN,IAAI,CAAC,SAAC,CAFT,EAEuB,MAAA,AAAc,WAAd,C,GAEjB,EAAO,EAAU,gBAAgB,CAAC,MACpC,EAAkB,EAAK,MAAM,CAC7B,EAAkB,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAE7C,OAAQ,GACN,IA5Ee,aA6ET,EA9EQ,KA4BV,EAAS,AAXjB,SAAmB,CAAU,EAG3B,IAAK,IAFC,EAAM,SAAS,aAAa,CAAC,MAE1B,EAAI,EAAG,EAAI,EAAY,IAC9B,EAAI,WAAW,CAAC,KAGlB,OAAO,CACT,EAsDoC,GAjDlC,EAAU,WAAW,CAAC,GAiDhB,EA/CC,EAAU,QAAQ,CAAC,MAAM,EAkDxB,GAlFQ,IAmFV,EAAkB,EAAQ,CAAA,GAGxB,EAAa,QAAQ,EACvB,EAAkB,EAAc,CAAA,GAGlC,KAEF,KA1FkB,gBA2FZ,EA7FQ,KAoChB,AA0DqC,EA1DhC,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,WAAW,CAAC,IAClB,GAwDM,EAtDC,AAsD8B,CAtD1B,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAyDtB,GAjGQ,IAkGV,EAAkB,EAAQ,CAAA,GAGxB,EAAgB,QAAQ,EAC1B,EAAkB,EAAiB,CAAA,GAGrC,KAEF,KAxGe,aAwCM,EAiEe,EAhEtC,EAAU,WAAW,CAAC,AAgEU,CAhEN,CAAC,EAAkB,EAAE,EAgE3C,CAAA,EA9DG,EAAU,QAAQ,CAAC,MAAM,AA8D5B,GA7GY,GAgHV,EAAkB,EAAQ,CAAA,GAGxB,EAAa,QAAQ,EACvB,EAAkB,EAAc,CAAA,GAGlC,KAEF,KApHkB,gBA8CpB,AAuEmC,EAvE9B,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,WAAW,CAAC,EAAI,QAAQ,CAAC,AAsEI,CAtEA,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAG,EAAE,CAC3D,GAqEI,CAAA,EAnEG,AAmE4B,CAnExB,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,AAmE1B,GA1HY,GA6HV,EAAkB,EAAQ,CAAA,GAGxB,EAAgB,QAAQ,EAC1B,EAAkB,EAAiB,CAAA,EAOzC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar MIN_COUNT = 2;\nvar MAX_COUNT = 10;\nvar APPEND_ROW = \"append-row\";\nvar APPEND_COLUMN = \"append-column\";\nvar REMOVE_ROW = \"remove-row\";\nvar REMOVE_COLUMN = \"remove-column\";\nvar container = document.querySelector(\".container\");\nvar tableBody = container.querySelector(\".field\").children[0];\nvar btnRemoveRow = container.querySelector(\".remove-row\");\nvar btnRemoveColumn = container.querySelector(\".remove-column\");\nvar btnAppendRow = container.querySelector(\".append-row\");\nvar btnAppendColumn = container.querySelector(\".append-column\");\nfunction createCell() {\n    return document.createElement(\"td\");\n}\nfunction createRow(cellsCount) {\n    var row = document.createElement(\"tr\");\n    for(var i = 0; i < cellsCount; i++)row.appendChild(createCell());\n    return row;\n}\nfunction appendRow(currentColCount) {\n    var newRow = createRow(currentColCount);\n    tableBody.appendChild(newRow);\n    return tableBody.children.length;\n}\nfunction appendColumn(rows) {\n    rows.forEach(function(row) {\n        row.appendChild(createCell());\n    });\n    return rows[0].children.length;\n}\nfunction removeRow(rows, currentRowCount) {\n    tableBody.removeChild(rows[currentRowCount - 1]);\n    return tableBody.children.length;\n}\nfunction removeColumn(rows) {\n    rows.forEach(function(row) {\n        row.removeChild(row.children[rows[0].children.length - 1]);\n    });\n    return rows[0].children.length;\n}\nfunction updateButtonState(button, condition) {\n    button.disabled = condition;\n}\ncontainer.addEventListener(\"click\", function(e) {\n    var button = e.target.closest(\".button\");\n    if (!button) return;\n    var currentBtnActionName = button.className.split(\" \").find(function(className) {\n        return className !== \"button\";\n    });\n    var rows = tableBody.querySelectorAll(\"tr\");\n    var currentRowCount = rows.length;\n    var currentColCount = rows[0].children.length;\n    switch(currentBtnActionName){\n        case APPEND_ROW:\n            if (currentRowCount < MAX_COUNT) currentRowCount = appendRow(currentColCount);\n            if (currentRowCount >= MAX_COUNT) updateButtonState(button, true);\n            if (btnRemoveRow.disabled) updateButtonState(btnRemoveRow, false);\n            break;\n        case APPEND_COLUMN:\n            if (currentColCount < MAX_COUNT) currentColCount = appendColumn(rows);\n            if (currentColCount >= MAX_COUNT) updateButtonState(button, true);\n            if (btnRemoveColumn.disabled) updateButtonState(btnRemoveColumn, false);\n            break;\n        case REMOVE_ROW:\n            currentRowCount = removeRow(rows, currentRowCount);\n            if (currentRowCount <= MIN_COUNT) updateButtonState(button, true);\n            if (btnAppendRow.disabled) updateButtonState(btnAppendRow, false);\n            break;\n        case REMOVE_COLUMN:\n            currentColCount = removeColumn(rows);\n            if (currentColCount <= MIN_COUNT) updateButtonState(button, true);\n            if (btnAppendColumn.disabled) updateButtonState(btnAppendColumn, false);\n            break;\n        default:\n            break;\n    }\n});\n\n//# sourceMappingURL=index.2f6a2d7b.js.map\n","'use strict';\n\nconst MIN_COUNT = 2;\nconst MAX_COUNT = 10;\nconst APPEND_ROW = 'append-row';\nconst APPEND_COLUMN = 'append-column';\nconst REMOVE_ROW = 'remove-row';\nconst REMOVE_COLUMN = 'remove-column';\n\nconst container = document.querySelector('.container');\nconst tableBody = container.querySelector('.field').children[0];\nconst btnRemoveRow = container.querySelector('.remove-row');\nconst btnRemoveColumn = container.querySelector('.remove-column');\nconst btnAppendRow = container.querySelector('.append-row');\nconst btnAppendColumn = container.querySelector('.append-column');\n\nfunction createCell() {\n  return document.createElement('td');\n}\n\nfunction createRow(cellsCount) {\n  const row = document.createElement('tr');\n\n  for (let i = 0; i < cellsCount; i++) {\n    row.appendChild(createCell());\n  }\n\n  return row;\n}\n\nfunction appendRow(currentColCount) {\n  const newRow = createRow(currentColCount);\n\n  tableBody.appendChild(newRow);\n\n  return tableBody.children.length;\n}\n\nfunction appendColumn(rows) {\n  rows.forEach((row) => {\n    row.appendChild(createCell());\n  });\n\n  return rows[0].children.length;\n}\n\nfunction removeRow(rows, currentRowCount) {\n  tableBody.removeChild(rows[currentRowCount - 1]);\n\n  return tableBody.children.length;\n}\n\nfunction removeColumn(rows) {\n  rows.forEach((row) => {\n    row.removeChild(row.children[rows[0].children.length - 1]);\n  });\n\n  return rows[0].children.length;\n}\n\nfunction updateButtonState(button, condition) {\n  button.disabled = condition;\n}\n\ncontainer.addEventListener('click', (e) => {\n  const button = e.target.closest('.button');\n\n  if (!button) {\n    return;\n  }\n\n  const currentBtnActionName = button.className\n    .split(' ')\n    .find((className) => className !== 'button');\n\n  const rows = tableBody.querySelectorAll('tr');\n  let currentRowCount = rows.length;\n  let currentColCount = rows[0].children.length;\n\n  switch (currentBtnActionName) {\n    case APPEND_ROW:\n      if (currentRowCount < MAX_COUNT) {\n        currentRowCount = appendRow(currentColCount);\n      }\n\n      if (currentRowCount >= MAX_COUNT) {\n        updateButtonState(button, true);\n      }\n\n      if (btnRemoveRow.disabled) {\n        updateButtonState(btnRemoveRow, false);\n      }\n\n      break;\n\n    case APPEND_COLUMN:\n      if (currentColCount < MAX_COUNT) {\n        currentColCount = appendColumn(rows);\n      }\n\n      if (currentColCount >= MAX_COUNT) {\n        updateButtonState(button, true);\n      }\n\n      if (btnRemoveColumn.disabled) {\n        updateButtonState(btnRemoveColumn, false);\n      }\n\n      break;\n\n    case REMOVE_ROW:\n      currentRowCount = removeRow(rows, currentRowCount);\n\n      if (currentRowCount <= MIN_COUNT) {\n        updateButtonState(button, true);\n      }\n\n      if (btnAppendRow.disabled) {\n        updateButtonState(btnAppendRow, false);\n      }\n\n      break;\n\n    case REMOVE_COLUMN:\n      currentColCount = removeColumn(rows);\n\n      if (currentColCount <= MIN_COUNT) {\n        updateButtonState(button, true);\n      }\n\n      if (btnAppendColumn.disabled) {\n        updateButtonState(btnAppendColumn, false);\n      }\n\n      break;\n\n    default:\n      break;\n  }\n});\n"],"names":["container","document","querySelector","tableBody","children","btnRemoveRow","btnRemoveColumn","btnAppendRow","btnAppendColumn","createCell","createElement","updateButtonState","button","condition","disabled","addEventListener","e","target","closest","newRow","currentRowCount","currentBtnActionName","className","split","find","rows","querySelectorAll","length","currentColCount","createRow","cellsCount","row","i","appendChild","forEach","removeChild"],"version":3,"file":"index.2f6a2d7b.js.map"}